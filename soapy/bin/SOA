#!/usr/bin/env python3

# q to quit at any time?
from psychopy.preferences import prefs
prefs.general['shutdownKey'] = 'q'

import sys
import os
from datetime import datetime
from numpy import random
from psychopy.gui import Dlg, DlgFromDict
from typing import Optional, List
from soapy.task_types import PhaseType
from soapy.instruct import show_instruction
from soapy.task import FabFruitTask
from soapy.lncdtasks import wait_for_scanner, Filepath
from soapy import DEFAULT_PHASES, image_path, read_img_list, timing_path
from soapy.seeded import pick_seed, single_phase, update_boxes

INFO = {}  # defined in main_info


def show_error(msg):
    """quick dialog popup to report issues"""
    d = Dlg(title=msg)
    d.addText(msg)
    d.show()


def validate() -> bool:
    """check inputs are sane
    Dlg modifies global INFO dict
    @return True if all good
    side-effects: modify INFO
    """
    global INFO
    if not INFO['ID']:
        show_error("no ID given")
        return False
    try:
        INFO['obj_seed'] = int(INFO['obj_seed'])
    except ValueError:
        show_error("bad/no obj_seed: must be a whole number")
        return False

    try:
        INFO['phase_type'] = PhaseType[INFO['phase']]
    except KeyError:
        show_error(f"error using {INFO['phase']}!")
        return False

    now = datetime.now()
    INFO['vdate'] = datetime.strftime(now, "%Y%m%d")
    INFO['vtime'] = datetime.strftime(now, "%H:%M.%S")
    outdir = os.path.join("task_data", INFO['ID'], INFO['vdate'])
    if not os.path.exists(outdir):
        os.makedirs(outdir)

    INFO['outdir'] = outdir
    # reuse or pick new seed
    seed_file = os.path.join(outdir, "seed.txt")
    try:
        INFO['obj_seed'] = pick_seed(seed_file, INFO['obj_seed'])
    except Exception as err:
        show_error(err)
        return None

    print(f"seed: {INFO['obj_seed']}")

    return True


def main_info():
    """go until we have valid info"""
    global INFO
    # prompt until we're good or we cancel
    isvalid = False
    while not isvalid:
        # task settings - inside loop or we'd loos list of options
        INFO = {
            'ID': '',
            'obj_seed': 0,
            'objs': ['fruits', 'animals', 'veggies'],
            'phase': ['ID', 'OD', 'DD', 'SOA', 'SURVEY'],
            'fullscreen': False,
            'instruction': True,
            'MR': False,
        }
        dlg = DlgFromDict(INFO, title="Slips of Action/Fab Fruits")
        if not dlg.OK:
            sys.exit(1)
        isvalid = validate()

        print(f"task INFO: {INFO}")


# ## Start
main_info()
p = INFO['phase_type']

blockinfo = {'start': 0, 'end': 0}  # only used for MR
settings = None                     # not used in MR, reset otherwise
# use psudeo-random times?
if INFO['MR']:
    # DD has 3 mr blocks. everything else is one
    blockinfo['end'] = 3 if p == PhaseType.DD else 1
    # modifies blockinfo inplace
    pdlg = DlgFromDict(blockinfo, title="Slips of Action/Fab Fruits: settings")
    if not pdlg.OK:
        sys.exit(1)
else:
    # build task. survey doesn't need aditional prompts
    if INFO.get('phase_type') != PhaseType.SURVEY:
        phase_settings = DEFAULT_PHASES[p]
        phase_settings['itis'] = ",".join([str(x) for x in phase_settings.get('itis', [])])
        # modifies phase_settings inplace
        pdlg = DlgFromDict(phase_settings, title="Slips of Action/Fab Fruits: settings")
        if not pdlg.OK:
            sys.exit(1)
        phase_settings['itis'] = [float(x) for x in phase_settings['itis'].split(",")]
        phase_settings['dur'] = float(phase_settings.get('dur', 1))
    settings = {p: phase_settings}


ffi = single_phase(p, INFO['obj_seed'], blockinfo['start'], blockinfo['end'],
                   settings)

# destroys devalued_blocks?
# info.py| set_names -> make_boxes -> seeded shuffle
# task.py| this_score = bx.score(e.phase, e.blocknum, e.side)
# box.py | bnum in self.devalued_blocks[btype]:
ffi = update_boxes(ffi, INFO['objs'], INFO['outdir'])


print(f"ffi: {ffi}")

# psychopy takes a bit to load.
# import here b/c we want a speedier dialog window
from psychopy.visual import Window

if INFO['fullscreen']:
    win = Window(fullscr=True)
else:
    win = Window([800, 600])


# if we are testing
if INFO.get('instruction'):
    show_instruction(win, p)
# ## Build the task
task = FabFruitTask(win, ffi)
task.save_path = os.path.join(INFO['outdir'], f"{INFO['vtime']}_{INFO['phase']}.csv")


# when preset timing is not important, we can use
# "duration" based timing instead of onset
#
# on MR, we also need to wait for the scanner trigger
# to say we actually started
if INFO.get('MR'):
    starttime = wait_for_scanner(win)
    # TODO: shuffle best timing list
else:
    task.timing_method = 'dur'
    starttime = None

# do it
if INFO.get('phase_type') == PhaseType.SURVEY:
    task.survey()
else:
    task.run(starttime)
    task.save_progress()
