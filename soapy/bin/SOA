#!/usr/bin/env python3
import sys
import os
from datetime import datetime
from psychopy.gui import Dlg, DlgFromDict
from soapy.task_types import PhaseType
from soapy.info import FabFruitInfo
from soapy.task import FabFruitTask
from soapy.lncdtasks import wait_for_scanner
from soapy import DEFAULT_PHASES, image_path, read_img_list


def show_error(msg):
    """quick dialog popup to report issues"""
    d = Dlg(title=msg)
    d.addText(msg)
    d.show()


def validate():
    """check inputs are sane
    Dlg modifies global INFO dict"""
    if not INFO['ID']:
        show_error("no ID given")
        return False
    try:
        INFO['obj_seed'] = int(INFO['obj_seed'])
    except ValueError:
        show_error("bad/no obj_seed: must be a whole number")
        return False

    if INFO['phase'] in ['instructions']:
        show_error(f"{INFO['phase']} phase not implemented")
        return False

    try:
        INFO['phase_type'] = PhaseType[INFO['phase']]
    except KeyError:
        show_error(f"error using {INFO['phase']}!")
        return False

    return True

def pick_seed(seed_file):
    """ seed can be specified or read from file
        but if both and they dont agree, panic
    @param seed_file - file to read seed from
    @param numpy.random.default_rng(seed)
    """
    from numpy import random
    seed = 0
    if os.path.isfile(seed_file):
        with open(seed_file) as f:
            seed = int(f.readline().replace("\n",""))


    # use file if we have it
    # unless expliclty set set seed from dialog
    # then check against known seed
    if not INFO['obj_seed'] and not seed:
        seed = int(random.uniform(10**10))
    elif not seed: 
        seed = INFO['obj_seed']
    elif not INFO['obj_seed']: 
        pass  # didn't try to change the seed, left at 0 in dialog. use file
    elif INFO['obj_seed'] != seed:
        show_error(f"already have seed {seed} in {seed_file}.\n" +
                   f"you provided {INFO['obj_seed']}\n" +
                   f"Either set dialog value to {seed} or remove {seed_file}")
        sys.exit(1)
    
    # write seed to file
    if not os.path.isfile(seed_file):
        with open(seed_file,"w") as f:
            f.write(f"{seed}")

    return random.default_rng(seed)

# prompt until we're good or we cancel
isvalid = False
while not isvalid:
    # task settings - inside loop or we'd loos list of options
    INFO = {
        'ID': '',
        'obj_seed': 0,
        'objs': ['fruits', 'animals', 'veggies'],
        'phase': ['instructions', 'ID', 'OD', 'DD', 'SOA'],
        'blocks': 3,
        'fullscreen': False,
        'MR': False,
        'quick_test': True,
    }
    dlg = DlgFromDict(INFO, title="Slips of Action/Fab Fruits")
    if not dlg.OK:
        sys.exit(1)
    isvalid = validate()

print(INFO)
now = datetime.now()
vdate = datetime.strftime(now, "%Y%m%d")
vtime = datetime.strftime(now, "%H:%M.%S")
outdir = os.path.join("task_data", INFO['ID'], vdate)
if not os.path.exists(outdir):
    os.makedirs(outdir)

# reuse or pick new seed
seed_file = os.path.join(outdir,"seed.txt")
seed = pick_seed(seed_file)


# psychopy takes a bit to load. import here b/c we want a speedier dialog window
from psychopy.visual import Window

res = [] if INFO['fullscreen'] else [800, 600]
win = Window(res)

# build task
p = INFO['phase_type']
ffi = FabFruitInfo({p: DEFAULT_PHASES[p]}, seed=seed)
# set fruits/animals/veggies. will use ffi.seed for random assignment
ffi.set_names(read_img_list(INFO['objs']))

# if we are testing
if INFO.get('quick_test'):
    ffi.timing = ffi.timing.loc[0:15]

# ## Build the task
task = FabFruitTask(win, ffi)
task.save_path = os.path.join(outdir,f"{vtime}_{INFO['phase']}.csv")


# when preset timing is not important, we can use
# "duration" based timing instead of onset
#
# on MR, we also need to wait for the scanner trigger
# to say we actually started
if INFO.get('MR'):
    starttime = wait_for_scanner(win)
    # TODO: shuffle best timing list
else:
    task.timing_method = 'dur'
    starttime = None

# do it
task.run(starttime)
task.save_progress()
